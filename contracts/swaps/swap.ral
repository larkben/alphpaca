//////////////////////////////////////////
// Swap Contract - swap.ral             //
//////////////////////////////////////////
//                         ^___^        //
//   |--| |--| |--- |--|  |     \       //
//   |--| |--| |    |--|  |  O -\--,    //
//   |    |  | |--- |  |  \_____|--|    //
//                                      //
//   cuddly, cute, and fluffy as hell   //
//                                      //
//////////////////////////////////////////

Contract Swap (
    sell: U256,
    selltoken: ByteVec,
    buy: U256,
    buytoken: ByteVec,
    owner: Address
) {
    // Events
    event Success(id: ByteVec, selltoken: ByteVec, sell: U256, buytoken: ByteVec, buy: U256)
    event Cancel(id: ByteVec)

    // Public Functions
    pub fn getToken() -> ByteVec {
        return token
    }

    pub fn getAmount() -> U256 {
        return amount
    }

    pub fn getTradeToken() -> ByteVec {
        return tradetoken
    }

    pub fn getTAmount() -> U256 {
        return tamount
    }

    pub fn getOwner() -> Address {
        return owner
    }

    // Contract Functions
    // market buy iterates through all instances of contracts that satisfy lowest number first
    @using(preapprovedAssets = true, assetsInContract = true, updateFields = false, checkExternalCaller = false)
    pub fn confirmswap() -> () {

    }

    // mass cancel all order function?
    @using(preapprovedAssets = false, assetsInContract = true, updateFields = false, checkExternalCaller = false)
    pub fn cancelswap() -> () {

        // Call Destroy
        destroySelf!(owner)

        emit Cancel(selfContractId!())
        
    }
}