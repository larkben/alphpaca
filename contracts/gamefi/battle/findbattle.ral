Contract FindBattle(
    admin: Address,
    pvp: ByteVec
) {
    event Battle(who: Address, id: ByteVec)

    enum Error {
        NotAdmin = 0
    }

    @using(preapprovedAssets = true, checkExternalCaller = false)
    pub fn createBattle(paca: ByteVec) -> () {

        let path = paca

        let (encodeImmutableFields, encodeMutableFields) = Battle.encodeFields!(callerAddress!(), paca, 15, nullContractAddress!(), zeros!(1), 15, true)

        let battleId = createSubContract!{callerAddress!() -> ALPH: minimalContractDeposit!()}
        (
            path,
            pvp,
            encodeImmutableFields,
            encodeMutableFields
        )

        emit Battle(callerAddress!(), battleId)
    }

    @using(checkExternalCaller = true)
    pub fn upgrade(newCode: ByteVec) -> () {
        checkCaller!(callerAddress!() == admin, Error.NotAdmin)

        migrate!(newCode)
    }
}